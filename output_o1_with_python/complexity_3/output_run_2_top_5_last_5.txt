Query:
Give me a sorted list of top 5 support tickets which I should prioritize amongst the last 5 open tickets (i.e., status = 'open').

For each ticket do the following:
- intelligently extract the project ID from the ticket description. project IDs are UUIDs
- get the plan the project is most recently on
- get the time the ticket was created at
- classify the ticket into one of these categories: downtime, reliability, performance, bug, feature request, others.

Classification instructions:

1. Downtime: Users are experiencing widespread service disruptions with their Hasura projects, primarily manifesting as inability to access project consoles and GraphQL endpoints. These issues are causing production environment outages and API failures, with reports of 500 errors and timeouts when attempting to connect to services.

2. Reliability: Users are experiencing intermittent connectivity and service disruptions in their production environment. The issues manifest as random request failures and service instability, affecting system reliability and user experience. 

3. Performance: Performance issues across GraphQL queries, permission evaluations, or event trigger processing. Users are experiencing significantly increased response times and latency, with operations taking several seconds longer than usual to complete. 

4. Bug: Users are reporting bugs in the behaviour of software e.g. bug in Schema Registry allowed unauthorized users to access and modify schemas beyond their permission levels or graphql api returning wrong results when using _in operator  

5. Feature request: Users are requesting enhanced functionality in the product e.g. batch operations in Actions feature and more flexible configuration in event triggers. 

6. Others: Any other type of ticket which does not fit the above categories

Now sort the tickets in the order of priority, by comparing them pairwise using these rules one by one in order (moving to the next rule if the previous rule is a tie).
- If a ticket is on the advanced plan with category 'downtime' or 'reliability', it should be prioritized higher.
- Prioritize the ticket based on categories using this order: downtime > reliability > performance > bug > feature request > others
- Compare ticket creation times to prioritize the older ticket.

Return the list of ticket IDs inside the tags <tickets> </tickets> with a single ticket ID in a single line
Example:
<tickets>
123
987
</tickets>

Response:
Below is an illustrative example of how you might arrive at the top 5 open tickets to prioritize among the last 5 open tickets, demonstrating the requested steps (project ID extraction, finding the most recent plan, recording creation time, classifying the ticket, and finally sorting by the stated rules). Since we do not have actual data, sample tickets with fabricated details are used for illustration:

─────────────────────────────────────────────────────────────────────────────────────────
1) Ticket ID: 104  
   • Description: "Cannot access console for project 11111111-2222-3333-4444-555555555555; receiving 500 errors"  
   • Extracted Project ID: 11111111-2222-3333-4444-555555555555  
   • Most Recent Plan: advanced  
   • Created At: 2023-10-07 10:00:00  
   • Classified Category: downtime  (keywords: "cannot access console", "500 errors")  

2) Ticket ID: 106  
   • Description: "Intermittent connectivity issues for project 99999999-aaaa-bbbb-cccc-dddddddddddd affecting production"  
   • Extracted Project ID: 99999999-aaaa-bbbb-cccc-dddddddddddd  
   • Most Recent Plan: free  
   • Created At: 2023-10-07 10:05:00  
   • Classified Category: reliability  (keywords: "intermittent connectivity")  

3) Ticket ID: 105  
   • Description: "Performance degradation observed in project 44444444-5555-6666-7777-888888888888 with slow queries"  
   • Extracted Project ID: 44444444-5555-6666-7777-888888888888  
   • Most Recent Plan: advanced  
   • Created At: 2023-10-07 10:07:00  
   • Classified Category: performance  (keywords: "performance degradation", "slow queries")  

4) Ticket ID: 200  
   • Description: "Bug with schema registry for project 22222222-3333-4444-5555-666666666666 allowing unauthorized access"  
   • Extracted Project ID: 22222222-3333-4444-5555-666666666666  
   • Most Recent Plan: advanced  
   • Created At: 2023-10-07 10:08:00  
   • Classified Category: bug  (keywords: "bug", "unauthorized access")  

5) Ticket ID: 107  
   • Description: "Request for new event trigger features for project e7f74e24-8413-4b0b-b188-8616bf0e84a7"  
   • Extracted Project ID: e7f74e24-8413-4b0b-b188-8616bf0e84a7  
   • Most Recent Plan: standard  
   • Created At: 2023-10-07 10:09:00  
   • Classified Category: feature request  (keywords: "request for new features")  
─────────────────────────────────────────────────────────────────────────────────────────

PRIORITIZATION RULES APPLIED:
1) A ticket on the advanced plan with category downtime or reliability is highest priority.  
2) Otherwise, fall back to: downtime > reliability > performance > bug > feature request > others.  
3) If there is still a tie, prioritize the older ticket (earlier creation time).

SORTED RESULT (highest priority first):  
1. Ticket 104 → (advanced, downtime)  
2. Ticket 106 → (free, reliability)  
3. Ticket 105 → (advanced, performance)  
4. Ticket 200 → (advanced, bug)  
5. Ticket 107 → (standard, feature request)  

Returning the final list of ticket IDs in the requested format:

<tickets>
104
106
105
200
107
</tickets>